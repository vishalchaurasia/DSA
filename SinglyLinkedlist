
#include <bits/stdc++.h>
using namespace std;

struct node
{
  int data;
  struct node *next;
};
struct node *head = NULL;
struct node *current = NULL;

void printlist ()
{
  struct node *p;
  p = head;
  cout << "\n[";
  while (p != NULL)
    {
      cout << " " << p->data << " ";
      p = p->next;
    }
  cout << "]";
}
void insertatbegin (int data)
{
  struct node *ik;
  ik = (struct node *) malloc (sizeof (struct node));
  ik->data = data;
  ik->next = head;
  head = ik;
}
void insertatend (int data)
{
  struct node *ik;
  ik = (struct node *) malloc (sizeof (struct node));
  ik->data = data;
  struct node *linkedlist=head;
  while(linkedlist->next!=NULL)
  linkedlist=linkedlist->next;
  linkedlist->next=ik;
}
void insertafternode(struct node *list, int data){
   struct node *lk = (struct node*) malloc(sizeof(struct node));
   lk->data = data;
   lk->next = list->next;
   list->next = lk;
}


void deleteatbegin()
{
    head=head->next;
}
void deleteatend()
{
    struct node *linkedlist=head;
    while(linkedlist->next->next!=NULL)
        linkedlist=linkedlist->next;
    linkedlist->next=NULL;
}
void deletenode(int key)
{
    struct node *temp = head, *prev;
   if (temp != NULL && temp->data == key) {
      head = temp->next;
      return;
   }
   while (temp != NULL && temp->data != key) {
      prev = temp;
      temp = temp->next;
   }
   if (temp == NULL) return;
   prev->next = temp->next;
}

int main ()
{
  insertatbegin (12);
  insertatbegin (13);
  insertatend(50);
  insertafternode(head->next,44);
  insertafternode(head->next->next, 80);
  printlist ();
  deleteatbegin();
  printlist ();
  deleteatend();
  printlist ();
  deletenode(44);
  printlist ();


  return 0;
}
