#include <bits/stdc++.h>
using namespace std;

struct node{
    int key;
    struct node *left;
    struct node *right; 
};

struct node *newNode(int item)
{
    struct node *temp=(struct node *)malloc(sizeof(struct node));
    temp->key=item;
    temp->left=NULL;
    temp->right=NULL;
    return temp;
}

    
void traverseInorder(struct node *root)
    {
        if(root!=NULL)
        {
            
            traverseInorder(root->left);
            cout<<" "<<root->key;
            traverseInorder(root->right);
        }
    }

struct node *insert(struct node *node,int key)
{
    if(node==NULL)
    return newNode(key);
    if(key<node->key)
    node->left=insert(node->left, key);
    else
    node->right=insert(node->right, key);
    return node;
}

struct node *search(struct node *root,int key)
{
    if(root==NULL || root->key==key)
    return root;
    if(root->key<key)
    return search(root->right, key);
    else
    return search(root->left, key);
}


int main()
{   
    int key;
    struct node *root=NULL;
    root=insert(root,8);
    root=insert(root,3);
    root=insert(root,7);
    root=insert(root,1);
    root=insert(root,9);
    root=insert(root,4);
    root=insert(root,6);
    
    cout<<"\nInorder:";
    traverseInorder(root);
    cout<<"\nEnter key you want to search for:";
    cin>>key;
    if(search(root,key)==NULL)
    cout<<key<<" not found"<<endl;
    else
    cout<<key<<" found"<<endl;
    
    return 0;
}

